<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="EducationDAO" >
	<select id="getNextReplySeq" resultType="_int">
		SELECT 	REPLY_ID_SEQ.NEXTVAL
		FROM	DUAL
	</select>
	
	<select id="getNowDate" resultType="string">
		SELECT	TO_CHAR(SYSDATE, 'YYYYMMDD')
		FROM	DUAL
	</select>

	<select id="getTotalEducationCount" resultType="_int">
		SELECT	COUNT(EDU_ID)
		FROM	EDU_INFO
	</select>

	<select id="getSearchedEducationCount" parameterType="EducationVO" resultType="_int" >
			SELECT	COUNT(*)
			FROM	EDU_INFO
			WHERE	1 = 1
			<if test="startDate != null">
	           AND SUBSTR(SRT_DATE, 1, 7) <![CDATA[ >= ]]> #{startDate} 
	           AND SUBSTR(SRT_DATE, 1, 7) <![CDATA[ <= ]]> #{endDate}
	        </if>
	       <if test="cost != null">
	           AND COST = (
	           					SELECT	CD_ID
	           					FROM	EDU_CST
	           					WHERE	CD_NM =  #{cost} 
	           				)
	        </if>
            <if test="educationType != null">
	           AND EDU_TP = (
		           				SELECT	CD_ID
		           				FROM	EDU_TIME
		           				WHERE	CD_NM = #{educationType} 
		           			)
	        </if>   
 		   <if test="educationTitle != null">
	           AND LOWER(EDU_TTL) LIKE '%'||#{educationTitle}||'%'
           </if>
	</select> 
	
	<select id="getOneEducationDetail" parameterType="map" resultType="EducationVO">
		SELECT	EDU.EDU_ID educationId
				, EDU.EDU_CTGR educationCategory
				, EDU.EDU_TTL educationTitle
				, EDU.MBR_ID memberId
				, EDU.MAX_MBR maxMember
				, EDU.EDU_LOC educationLocation
				, EDU.EDU_CLCM educationCurriculum
				, EDU.EDU_INTR educationIntroduce
				, EDU.SRT_DATE startDate
				, EDU.END_DATE endDate
				, EDU.START_TM startTime
				, EDU.END_TM endTime
				, EDU.EDU_TP educationType
		 		, EDU_TIME.CD_NM typeName
				, EDU_CST.CD_NM costName 
		FROM	EDU_INFO EDU
				, EDU_CST
				, EDU_TIME
		WHERE	EDU_ID LIKE #{educationId}
		AND		EDU.COST = EDU_CST.CD_ID
		AND		EDU.EDU_TP = EDU_TIME.CD_ID
	</select>

	<select id="getAllCommentByEducationId" parameterType="map" resultType="QNAVO">
 	SELECT	REPLY_ID replyId
				, EDU_ID eduId
				, PARENT_REPLY_ID parentReplyId
				, ORDER_NO orderNo
				, DESCRIPTION description
				, MBR_ID mbrId
				, LIKE_CNT likeCnt
				, DISLIKE_CNT dislikeCnt
				, CREATED_DATE createdDate
				, DEP depth
		FROM	(
					SELECT	ROWNUM AS RNUM
							, QNA.*
					FROM	(
								SELECT	QNA.*,
										LEVEL DEP
								FROM	QNA
								WHERE	EDU_ID = #{educationId}
							 	START   WITH PARENT_REPLY_ID = '0'
           						CONNECT BY PRIOR REPLY_ID = PARENT_REPLY_ID 
							) QNA
					WHERE	ROWNUM <![CDATA[<=]]> #{endIndex}
				) QNA
		WHERE	RNUM >= #{startIndex}		
	</select>
<!-- 	<select id="getAllCommentByEducationId" parameterType="string" resultType="QNAVO">
		SELECT	REPLY_ID replyId
				, EDU_ID eduId
				, PARENT_REPLY_ID parentReplyId
				, ORDER_NO orderNo
				, DESCRIPTION description
				, MBR_ID mbrId
				, LIKE_CNT likeCnt
				, DISLIKE_CNT dislikeCnt
				, CREATED_DATE createdDate
		FROM 	QNA
		WHERE	EDU_ID = #{educationId}
	</select> -->
	
	<select id="getAllEducationList" parameterType="EducationSearchVO" resultType="EducationVO">
		SELECT	EDU.EDU_ID educationId
				, EDU.EDU_CTGR educationCategory
				, EDU.EDU_TTL educationTitle
				, EDU.MBR_ID memberId
				, EDU.MAX_MBR maxMember
				, EDU.EDU_LOC educationLocation
				, EDU.EDU_CLCM educationCurriculum
				, EDU.EDU_INTR educationIntroduce
				, EDU.SRT_DATE startDate
				, EDU.END_DATE endDate
				, EDU.START_TM startTime
				, EDU.END_TM endTime
				, EDU_TIME.CD_NM typeName
				, EDU_CST.CD_NM costName
		FROM	(
					SELECT	ROWNUM AS RNUM
							, EDU_INFO.*
					FROM	(
								SELECT	*
								FROM	EDU_INFO
								ORDER	BY EDU_ID DESC
							) EDU_INFO
					WHERE	ROWNUM <![CDATA[<=]]> #{endIndex}
				) EDU
				, EDU_CST
				, EDU_TIME
		WHERE	EDU.COST = EDU_CST.CD_ID
		AND		EDU.EDU_TP = EDU_TIME.CD_ID
		AND		RNUM >= #{startIndex}		
	</select>


	<select id="doSearchList" parameterType="map" resultType="EducationVO">
		SELECT	EDU.EDU_ID educationId
				, EDU.EDU_CTGR educationCategory
				, EDU.EDU_TTL educationTitle
				, EDU.MBR_ID memberId
				, EDU.MAX_MBR maxMember
				, EDU.EDU_LOC educationLocation
				, EDU.EDU_CLCM educationCurriculum
				, EDU.EDU_INTR educationIntroduce
				, EDU.SRT_DATE startDate
				, EDU.END_DATE endDate
				, EDU.START_TM startTime
				, EDU.END_TM endTime
				, EDU_TIME.CD_NM typeName
				, EDU_CST.CD_NM costName
         FROM   (
               SELECT   ROWNUM   AS RNUM
                     , EDU_INFO.*
               FROM   (
                        SELECT   *
                        FROM   EDU_INFO
                        WHERE  1=1	 
			          	<if test="educationVO.startDate != null">
				           AND SUBSTR(SRT_DATE, 1, 7) <![CDATA[ >= ]]> #{educationVO.startDate} 
				           AND SUBSTR(SRT_DATE, 1, 7) <![CDATA[ <= ]]> #{educationVO.endDate}
				        </if>
				        <if test="educationVO.cost != null">
				           AND COST = (
				           					SELECT	CD_ID
				           					FROM	EDU_CST
				           					WHERE	CD_NM =  #{educationVO.cost} 
				           				)
				        </if>
 					    <if test="educationVO.educationType != null">
				           AND EDU_TP = (
					           				SELECT	CD_ID
					           				FROM	EDU_TIME
					           				WHERE	CD_NM = #{educationVO.educationType} 
					           			)
				        </if>      
			 		   <if test="educationVO.educationTitle != null">
				           AND LOWER(EDU_TTL) LIKE '%'||#{educationVO.educationTitle} ||'%'
			           </if>
                        ORDER   BY EDU_ID DESC
                     ) EDU_INFO
               WHERE   ROWNUM <![CDATA[<=]]> #{searchVO.endIndex}
            ) EDU
            , EDU_CST
			, EDU_TIME
      WHERE   RNUM >= #{searchVO.startIndex}
	  AND     EDU.COST = EDU_CST.CD_ID
	  AND	  EDU.EDU_TP = EDU_TIME.CD_ID
    </select>

	 <insert id="insertNewComment" parameterType="QNAVO">
			INSERT INTO SEMS.QNA (
								   REPLY_ID 
								   , EDU_ID 
								   , PARENT_REPLY_ID 
								   , ORDER_NO 
								   , DESCRIPTION 
								   , MBR_ID 
								   , CREATED_DATE
								   ) 
						VALUES ( 
								 #{replyId},
								 #{eduId},
								 '0',
								 '4',
								 #{description},
								 #{mbrId},
								 SYSDATE
								 )			
 	</insert>
 	
	<delete id="doCancelEducation" parameterType="string">
		DELETE	
		FROM	EDU_HTR
		WHERE	EDU_ID = #{educationId}
		AND		MBR_ID = #{id} 
	</delete>
    
    <select id="getMemberRegInfo" parameterType="string"  resultType="string">
    	SELECT 	 DISTINCT EDU_TP
	    FROM 	 EDU_INFO
	    WHERE    EDU_ID IN (
	                        SELECT  EDU_ID
	                        FROM    EDU_HTR
	                        WHERE   MBR_ID = #{id}
	                        )
    </select>
    
    <insert id="doApplyEducation" parameterType="map">
    	INSERT INTO SEMS.EDU_HTR (
								   EDU_ID
								   , EDU_HTR_ID
								   , MBR_ID
								   ) 
						VALUES ( 
								#{educationId}
								, EDU_HTR_ID_SEQ.NEXTVAL
								, #{id}
							 )
   	</insert>
    
    <select id="isApplyMemberByEducationId" parameterType="map" resultType="_int">
    	SELECT  COUNT(EDU_HTR_ID)
    	FROM	EDU_HTR
    	WHERE	EDU_ID = #{educationId}
    	AND		MBR_ID = #{id}
    </select>
    
    <select id="getEduReplyCount" parameterType = "string" resultType="_int">
   		SELECT 	COUNT(*)	
		FROM	QNA
		WHERE 	EDU_ID = #{educationId}
    </select>
    
    <select id="getCostName" resultType="string">
    	SELECT  CD_NM
    	FROM	EDU_CST
    </select>
    
    <select id="getTypeName" resultType="string">
    	SELECT  CD_NM
    	FROM	EDU_TIME
    </select>
	
	<select id="doTransCostId" parameterType="string" resultType="string">
		SELECT  CD_ID
		FROM	EDU_CST
		WHERE   CD_NM = #{cost}
	</select>

	<select id="doTransTypeId" parameterType="string" resultType="string">
		SELECT  CD_ID
		FROM	EDU_TIME
		WHERE   CD_NM = #{educationType}
	</select>
	
	<select id="getTotalQNACount" parameterType="string" resultType="_int">
		SELECT	COUNT(REPLY_ID)
		FROM	QNA
		WHERE	MBR_ID = #{memberId}
		AND		PARENT_REPLY_ID = 0
	</select>
	
	<select id="getAllQNAList" parameterType="QNASearchVO" resultType="QNAVO">
		SELECT	Q.REPLY_ID replyId
				, Q.EDU_ID eduId
				, Q.PARENT_REPLY_ID parentReplyId
				, Q.ORDER_NO orderNo
				, Q.DESCRIPTION description
				, Q.MBR_ID mbrId
				, Q.LIKE_CNT likeCnt
				, Q.DISLIKE_CNT dislikeCnt
				, Q.CREATED_DATE createdDate
				, (
					SELECT	'Y'
					FROM	QNA
					WHERE	PARENT_REPLY_ID = Q.REPLY_ID
				
				 ) isAnswered
		FROM	(
					SELECT	ROWNUM AS RNUM
							, QNA.*
					FROM	(
								SELECT	*
								FROM	QNA
								WHERE	MBR_ID = #{id}
								AND		PARENT_REPLY_ID = 0
								ORDER	BY REPLY_ID DESC
							) QNA
					WHERE	ROWNUM <![CDATA[<=]]> #{endIndex}
				) Q
		WHERE	RNUM <![CDATA[>=]]> #{startIndex}
	</select>

	<select id="getSelectedQNA" parameterType="String" resultType="QNAVO">
		SELECT		REPLY_ID replyId
					, EDU_ID eduId
					, PARENT_REPLY_ID parentReplyId
					, ORDER_NO orderNo
					, DESCRIPTION description
					, MBR_ID mbrId
					, LIKE_CNT likeCnt
					, DISLIKE_CNT dislikeCnt
					, CREATED_DATE createdDate
		FROM		QNA
		WHERE		REPLY_ID = #{replyId}
	</select>
	
	<select id="getSelectedQNAAnswer" parameterType="String" resultType="QNAVO">
		SELECT		REPLY_ID replyId
					, EDU_ID eduId
					, PARENT_REPLY_ID parentReplyId
					, ORDER_NO orderNo
					, DESCRIPTION description
					, MBR_ID mbrId
					, LIKE_CNT likeCnt
					, DISLIKE_CNT dislikeCnt
					, CREATED_DATE createdDate
		FROM		QNA
		WHERE		PARENT_REPLY_ID = #{replyId}
	</select>
	
	<select id="exportQNAListAsExcel" parameterType="String" resultType="QNAVO">
		SELECT		Q.REPLY_ID replyId
					, Q.EDU_ID eduId
					, Q.PARENT_REPLY_ID parentReplyId
					, Q.ORDER_NO orderNo
					, Q.DESCRIPTION description
					, Q.MBR_ID mbrId
					, Q.LIKE_CNT likeCnt
					, Q.DISLIKE_CNT dislikeCnt
					, Q.CREATED_DATE createdDate
					, (
						SELECT	'Y'
						FROM	QNA
						WHERE	PARENT_REPLY_ID = Q.REPLY_ID
					 ) isAnswered
					 , (
                            SELECT  DESCRIPTION
                            FROM    QNA
                            WHERE   REPLY_ID = (
                                        SELECT  REPLY_ID
                                        FROM    QNA
                                        WHERE   PARENT_REPLY_ID = Q.REPLY_ID
                                    ) 
					 ) answer 
		FROM	QNA Q
		WHERE	Q.MBR_ID = #{memberId}
		AND		Q.PARENT_REPLY_ID = '0'
		ORDER	BY Q.REPLY_ID ASC
	</select>
	
	<select id="getApplyHistory" parameterType="map" resultType="EducationHistoryVO">
		SELECT	EDU_HTR_ID educationHistoryId
				, EDU_ID educationId
				, MBR_ID memberId
				, EDU_HTR_DT educationHistoryDate
				, STAT state
				, IP ip
				, CMNT cmnt
				, FDBK fdbk
		FROM	EDU_HTR
		WHERE	MBR_ID = #{ memberId }
		AND		EDU_ID = #{ educationId }
		AND		STAT = 'JOIN_APLY'
	</select>

	<insert id="doReReplyInsert" parameterType="QNAVO">
		INSERT INTO QNA (
						   REPLY_ID 
						   , EDU_ID 
						   , PARENT_REPLY_ID 
						   , ORDER_NO 
						   , DESCRIPTION 
						   , MBR_ID 
						   , CREATED_DATE
						   ) 
					VALUES ( 
							 #{replyId},
							 #{eduId},
							 #{parentReplyId},
							 '4',
							 #{description},
							 #{mbrId},
							 SYSDATE
							 )			
	</insert>

	<select id="getEmail" parameterType="string" resultType="string">
		SELECT	EMAIL
		FROM	MBR
		WHERE	ID = #{id}
	</select>
	
	<select id="getStartYear" resultType="string">
		SELECT	SUBSTR(SDATE, 0, 4) SDATE
		FROM	(
                    SELECT  SRT_DATE SDATE
                    FROM    EDU_INFO
                    ORDER   BY SRT_DATE ASC
                )
		WHERE   ROWNUM = 1
	</select>
	
	<select id="getEndYear" resultType="string">
		SELECT	SUBSTR(EDATE, 0, 4) EDATE
		FROM	(
                    SELECT  END_DATE EDATE
                    FROM    EDU_INFO
                    ORDER   BY END_DATE DESC
                )
		WHERE   ROWNUM = 1
	
	</select>
</mapper>
