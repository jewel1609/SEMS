<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teamDAO">
	
	<insert id="addNewTeamBBS" parameterType="TeamBBSVO">
		INSERT INTO TEAM_BBS (
									   TEAM_BBS_ID, 
									   TEAM_ID,
									   TITLE, 
									   DESCRIPT,
									   MBR_ID, 
									   CREATED_DATE,
									   <if test="isNotice != null">
								 	   IS_NOTICE
									   </if>
									
					   			  ) 
		VALUES 					( 
									   #{teamBBSId},
									   #{teamId},
									 	#{title},
										#{descript},
										#{memberId},
									 	SYSDATE,
									 	<if test="isNotice != null">
									 	#{isNotice}
									 	</if>
								)
	</insert>
	
	<select id="getNextTeamBBSSeq"  resultType = "_int">
		SELECT	TEAM_BBS_SEQ.NEXTVAL
		FROM	DUAL
	</select>
	
	<select id="getSysDate" resultType = "String">
		SELECT	TO_CHAR(SYSDATE , 'YYYYMMHH')
		FROM	DUAL
	</select>
	
	<select id="getAllTeamList" parameterType="TeamSearchVO" resultType="TeamVO">
		SELECT	T3.TEAM_ID teamId
				, T3.TEAM_NM teamNumber
				, T3.TEAM_DT teamDate
				, T3.EDU_ID educationId
		FROM	(
					SELECT	ROWNUM AS RNUM
							, T2.*
					FROM	(
								SELECT	T.TEAM_ID
										, T.TEAM_NM
										, T.TEAM_DT
										, T.EDU_ID
								FROM	TEAM T
								WHERE	1 = 1
								<if test="searchKeyword != null and searchKeyword != ''">
								AND		(
											<if test="searchType == 'teamId'">
												T.TEAM_ID LIKE '%' || #{searchKeyword} || '%'
											</if>
											<if test="searchType == 'teamNumber'">
												T.TEAM_NM LIKE '%' || #{searchKeyword} || '%'
											</if>
											<if test="searchType == 'educationId'">
												T.EDU_ID LIKE '%' || #{searchKeyword} || '%'
											</if>
											<if test="startDate != null and startDate != ''">
												T.TEAM_DT <![CDATA[>=]]> #{startDate}
											</if>
											<if test="endDate != null and endDate != ''">
												T.TEAM_DT <![CDATA[<]]> TO_DATE(#{endDate}, 'YYYY-MM-DD') + 1
											</if>
										)
								</if>
								ORDER	BY T.TEAM_ID DESC
							) T2
					WHERE	ROWNUM <![CDATA[<=]]> #{endIndex}
				) T3
		WHERE	RNUM <![CDATA[>=]]> #{startIndex}
	</select>

	
	<!-- <select id="getTotalteamCount" resultType="_int">
		SELECT	COUNT(TEAM_ID)
		FROM	(
					SELECT	TEAM.*
					FROM	(
								SELECT	*
								FROM	TEAM
								WHERE	MBR_ID = #{id}
								AND		TEAM_ID = '0'
								<if test="searchKeyword != null and searchType != null">
								AND		(
										<if test="searchType == 'teamId'">
											TEAM_ID LIKE '%' || #{searchKeyword} || '%'
										</if>
										<if test="searchType == 'educationId'">
											AND	EDU_ID LIKE '%' || #{searchKeyword} || '%'
										</if>
										<if test="searchType == 'teamName'">
											AND		TEAM_NM LIKE '%' || #{searchKeyword} || '%'
										</if>
										)
								</if>
										) TEAM
		WHERE	PARENT_REPLY_ID = '0'
</select> -->
	
	 
	 <select id="getTotalteamCount" resultType="_int">
	 	SELECT	COUNT(*)
		FROM	TEAM_BBS
	 </select>
	<select id="getTeamBBSList" resultType="TeamBBSVO">
		SELECT	TEAM_BBS.TEAM_BBS_ID teamBBSId,
	    		TEAM_BBS.TEAM_ID teamId, 
	    		TEAM_BBS.TITLE title, 
	    		BBS_HTR.HITS hits,
			    TEAM_BBS.DESCRIPT descript, 
			    TEAM_BBS.LIKE_CNT likeCount,
			    TEAM_BBS.DISLIKE_CNT disLikeCount, 
			    TEAM_BBS.MBR_ID memberId, 
			    TEAM_BBS.CREATED_DATE createdDate, 
		   		TEAM_BBS.MODIFIED_DATE modifiedDate,
		   		TEAM_BBS.IS_NOTICE isNotice
		FROM	(
					SELECT	ROWNUM AS RNUM
							, TEAM_BBS.*
					FROM	(
								SELECT	*
								FROM	TEAM_BBS
								ORDER	BY TEAM_BBS_ID DESC
							) TEAM_BBS
					WHERE	ROWNUM <![CDATA[<=]]> #{endIndex}
				) TEAM_BBS
				,(
					SELECT  BBS_ID, COUNT(*) HITS
					FROM    BBS_HTR
					GROUP   BY BBS_ID
				) BBS_HTR
		WHERE	RNUM >= #{startIndex}
		AND		BBS_HTR.BBS_ID (+)= TEAM_BBS.TEAM_BBS_ID
	</select>
	
	<select  id="getSearchedBBSCount" resultType="_int">
		SELECT	COUNT(*)
		FROM	TEAM_BBS
	</select>	
	
	<select id="getOneTeamDetail" parameterType="string" resultType="TeamsListVO">
	SELECT	TEAM_LST_ID teamListId
			, TEAM_ID teamId
			, MBR_ID mbrId
	FROM	TEAM_LIST
	WHERE	TEAM_ID = #{teamListId}
	</select>
	
	<select id="getTeamBBS" parameterType="String" resultType="TeamBBSVO">
		SELECT		TEAM_BBS_ID teamBBSId,
		    		TEAM_ID teamId, 
		    		TITLE title, 
					DESCRIPT descript, 
					COUNT_HITS.HITS hits, 
					LIKE_CNT likeCount,
					DISLIKE_CNT disLikeCount, 
					MBR_ID memberId, 
					CREATED_DATE createdDate, 
			   		MODIFIED_DATE modifiedDate,
			   		IS_NOTICE isNotice
		FROM		TEAM_BBS
					,
					(
						SELECT	COUNT(*) HITS
						FROM	BBS_HTR
						WHERE 	BBS_ID = #{teamBBSId}
					) COUNT_HITS
		WHERE		TEAM_BBS_ID = #{teamBBSId}
	</select>
	
	<select id="isAlreadyCheckBBS" parameterType="TeamBBSVO" resultType="_int">
		SELECT	COUNT(*)
		FROM	BBS_HTR
		WHERE	BBS_ID = #{teamBBSId}
		AND		MBR_ID = #{memberId}
	</select>
		
	<insert id="addHitsRecord" parameterType="TeamBBSVO">
		INSERT INTO BBS_HTR (
		  						 BBS_HTR_ID
		  						 , MBR_ID
		  						 , BBS_ID
		  					) 
		VALUES				( 
								 #{bbsHistoryId},	
								 #{memberId},
								 #{teamBBSId}
						    )
	</insert>
	
	<select id="getNextBBSHistorySeq" resultType="_int">
		SELECT	BBS_HTR_ID_SEQ.NEXTVAL
		FROM	DUAL
	</select>
	
	<select id="checkDislikeByTeamBBSVO" parameterType="TeamBBSVO" resultType="_int">
		SELECT	COUNT(*)
		FROM	BBS_HTR
		WHERE	MBR_ID 	= #{memberId}
		AND		BBS_ID	= #{teamBBSId}
		AND		DISLIKE	= 'Y'
	</select>
	
	<update id="addLikeRecord" parameterType="TeamBBSVO">
		UPDATE	BBS_HTR
		SET		LIKE = 'Y'
		WHERE	MBR_ID = #{memberId}
		AND		BBS_ID	= #{teamBBSId}
	</update>
	
	<select id="checkLikeByTeamBBSVO" parameterType="TeamBBSVO" resultType="_int">
		SELECT	COUNT(*)
		FROM	BBS_HTR
		WHERE	MBR_ID  = #{memberId}
		AND		BBS_ID	= #{teamBBSId}
		AND		LIKE	= 'Y'
	</select>
	
	<update id="addDislikeRecord" parameterType="TeamBBSVO">
		UPDATE	BBS_HTR
		SET		DISLIKE = 'Y'
		WHERE	MBR_ID = #{memberId}
		AND		BBS_ID	= #{teamBBSId}
	</update>
</mapper>