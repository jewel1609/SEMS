<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MemberDAO">
	<select id="getNowDate">
		SELECT	TO_CHAR(SYSDATE, 'YYYY-MM-DD')
		FROM	DUAL
	</select>
	<insert id="addNewMember" parameterType="MemberVO">
		INSERT INTO MBR	(
							ID
							, PWD
							, NM
							, EMAIL
							, HIGHEST_EDU_LV
							, UNIV_NM
							, MJR_NM
							, GRDT_TP
							, BRTH_DT
							, PHONE_NMB
							, MBR_TP
							, SALT
							, LATEST_LGI_DT
						)
		VALUES 			( 
							#{id}
							, #{password}
							, #{name}
							, #{email}
							, #{highestEducationLevel}
							, #{universityName}
							, #{majorName}
							, #{graduationType}
							, #{birthDate}
							, #{phoneNumber}
							, #{memberType}
							, #{salt}
							, SYSDATE
						)
	</insert>
	<select id="getSaltById" parameterType="string" resultType="string">
		SELECT	SALT salt
		FROM	MBR
		WHERE	ID = #{ id }
	</select>
	
	<select id="getPasswordById" parameterType="string" resultType="string">
		SELECT	PWD password
		FROM	MBR
		WHERE	ID = #{id}
	</select>
	
	<select id="login" parameterType="MemberVO" resultType="MemberVO">
		SELECT	ID id
				, PWD password
				, NM name
				, EMAIL email
				, HIGHEST_EDU_LV highestEducationLevel
				, UNIV_NM universityName
				, MJR_NM majorName
				, GRDT_TP graduationType
				, BRTH_DT birthDate
				, PHONE_NMB phoneNumber
				, MBR_TP memberType
				, SALT salt
				, LGI_F_CT loginFailCount
				, IS_ACC_LCK isAccountLock
				, TO_CHAR(LATEST_LGI_DT, 'YYYY-MM-DD') latestLoginDate
				, RSN_DT resignDate
				, RSN isResign
				, MDF_F_CT modifyFailCount
				, IS_MDF_LCK isModifyLock
		FROM	MBR
		WHERE	ID = #{id}
		AND		PWD = #{password}
	</select>
	<select id="isAccountLock" parameterType="string" resultType="string">
		SELECT	IS_ACC_LCK
		FROM	MBR
		WHERE	ID = #{id}
	</select>

	<select id="isExistId" parameterType="string" resultType="string">
		SELECT	ID
		FROM	MBR
		WHERE	ID = #{id}
	</select>
	<insert id="loginHistory" parameterType="LoginHistoryVO">
	</insert>
	<insert id="stampLoginTime" parameterType="LoginHistoryVO">

		INSERT INTO LGI_HTR	(
								LGI_HTR_ID
								, MBR_ID
								, LGI_IP
								, LGI_DT
							) 
		VALUES				(
								LGI_HTR_ID_SEQ.NEXTVAL
								, #{ id }
								, #{ lgiIp }
								, SYSDATE
		 					)
	</insert>
	<update id="logoutHistory" parameterType="LoginHistoryVO">
		UPDATE	LGI_HTR
		SET		LGO_DT = SYSDATE
		WHERE	LGI_HTR_ID = #{ lgiHtrId }
	</update>
	<select id="saveLoginHistoryAsExcel" resultType="LoginHistoryVO" parameterType="string">
		SELECT	LGI_HTR_ID lgiHtrId
				, MBR_ID id
				, LGI_IP lgiIp
				, LGI_DT lgiDt
				, LGO_DT lgoDt
		FROM	LGI_HTR
		WHERE	MBR_ID = #{memberId}
	</select>
	<update id="loginSuccess" parameterType="string">
		UPDATE	MBR
		SET		LGI_F_CT = 0
				, IS_ACC_LCK = 'N'
				, LATEST_LGI_DT = SYSDATE
		WHERE	ID = #{id}
	</update>
	<update id="plusLoginFailCount" parameterType="string">
		UPDATE	MBR
		SET		LGI_F_CT = LGI_F_CT + 1
				, LATEST_LGI_DT = SYSDATE
		WHERE	ID = #{id}
	</update>
	<update id="updateAccountLock" parameterType="string">
		UPDATE	MBR
		SET		IS_ACC_LCK = 'Y'
		WHERE	ID = #{id}
		AND		LGI_F_CT >= 5
	</update>
	
	<select id="getOneMember" parameterType="string" resultType="MemberVO">
		SELECT	ID id
				, PWD password 
				, NM name
				, EMAIL email
				, HIGHEST_EDU_LV highestEducationLevel
				, UNIV_NM universityName
				, MJR_NM majorName
				, GRDT_TP graduationType
				, BRTH_DT birthDate
				, PHONE_NMB phoneNumber
				, MBR_TP memberType
		FROM	MBR
		WHERE	ID = #{id}
	</select>
	<update id="resetModifyLockAndCount" parameterType="string">
		UPDATE	MBR
		SET		MDF_F_CT = 0
				, IS_MDF_LCK = 'N'
		WHERE  ID  = #{id}
	</update>
	<update id="plusModifyFailCount" parameterType="string">
		UPDATE	MBR
		SET		MDF_F_CT = MDF_F_CT + 1
		WHERE	ID = #{id}
	</update>
	<update id="updateModifyAccountLock" parameterType="string">
		UPDATE	MBR
		SET		IS_MDF_LCK = 'Y'
		WHERE	ID = #{id}
		AND		MDF_F_CT <![CDATA[>=]]> 3
	</update>
	<select id="isModifyAccountLock" parameterType="string" resultType="_int">
		SELECT	COUNT(IS_MDF_LCK)
		FROM	MBR
		WHERE	ID = #{id}
		AND		IS_MDF_LCK = 'Y'
	</select>
	<select id="needToChangPassword" resultType="string">
		SELECT	'Y'
		FROM	MBR
		WHERE	ID = #{id}
		AND		(SYSDATE - LATEST_LGI_DT) >= 30
	</select>
	<select id="getTotalLoginHisotryCount" resultType="_int">
		SELECT	COUNT(LGI_HTR_ID)
		FROM	LGI_HTR		
	</select>
	<select id="getAllLoginHistory" parameterType="LoginHistorySearchVO" resultType="LoginHistoryVO">
		SELECT	LGI_HTR_ID lgiHtrId
				, MBR_ID id
				, LGI_IP lgiIp
				,LGI_DT lgiDt
				, LGO_DT lgoDt
		FROM	(
					SELECT	ROWNUM AS RNUM
							, LOGIN_HISTORY.*
					FROM	(
								SELECT	*
								FROM	LGI_HTR
								ORDER BY LGI_HTR_ID DESC
							) LOGIN_HISTORY
					WHERE	ROWNUM <![CDATA[<=]]> #{endIndex}
				)
		WHERE	RNUM <![CDATA[>=]]> #{startIndex}
	</select>
	
	<update id="modifyMemberInfo" parameterType="MemberVO" >
		UPDATE	MBR
		SET		
				<if test="name != null">
				NM = #{name},
				</if>
				<if test="password != null">
				PWD = #{password},
				</if>
				<if test="email != null">
				EMAIL = #{email},
				</if>
				<if test="highestEducationLevel != null">
				HIGHEST_EDU_LV = #{highestEducationLevel},
				</if>
				<if test="graduationType != null">
				GRDT_TP = #{graduationType},
				</if>
				<if test="birthDate != null">
				BRTH_DT = #{birthDate},
				</if>
				<if test="phoneNumber">
				PHONE_NMB = #{phoneNumber},
				</if>
				<if test="salt != null">
				SALT = #{salt}
				</if>
		WHERE	ID = #{id}
	</update>
	
</mapper>