<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="EducationDAO" >

<select id="nextEduSeq" resultType="_int">
		SELECT	EDU_ID_SEQ.NEXTVAL
		FROM	DUAL
	</select>
	
	<select id="nowDate" resultType="string">
		SELECT	TO_CHAR(SYSDATE, 'YYYYMMDD')
		FROM	DUAL
	</select>
	
	<insert id="insertNewEducation" parameterType="educationVO">

		INSERT INTO SEMS.EDU_INFO (
									   EDU_ID 
									   , EDU_CTGR  
									   , EDU_TTL  
									   , MBR_ID 
									   , MAX_MBR 
									   , EDU_LOC 
									   , EDU_CLCM 
									   , EDU_INTR 
									   , SRT_DATE 
									   , END_DATE 
									   , START_TM 
									   , END_TM 
									   , EDU_TP 
									   , COST 
									) 
		VALUES 					 (	#{educationId}
									 , #{educationCategory}
									 , #{educationTitle}
									 , #{memberId}
									 , #{maxMember}
									 , #{educationLocation}
									 , #{educationCurriculum}
									 , #{educationIntroduce}
									 , #{startDate}
									 , #{endDate }
									 , #{startTime}
									 , #{endTime}
									 , #{educationType}
									 , #{cost}
								)
	</insert>
	
	<select id="getOneEducation" parameterType="string" resultType="EducationVO">
		SELECT	E.EDU_ID educationId
				, EDU_CTGR educationCategory
				, EDU_TTL educationTitle
				, MBR_ID memberId
				, MAX_MBR maxMember
				, EDU_LOC educationLocation
				, EDU_CLCM educationCurriculum
				, EDU_INTR educationIntroduce
				, SRT_DATE startDate
				, END_DATE endDate
				, START_TM startTime
				, END_TM endTime
				, EDU_TP educationType
				, COST cost
				, FILE_NM fileName
		FROM	EDU_INFO E
				, FILES	F
		WHERE	E.EDU_ID = #{educationId}
		AND		F.ATC_ID = E.EDU_ID
	</select>
	
	<update id="modifyNewEducation" parameterType="EducationVO">
	 	UPDATE	EDU_INFO
	 	SET		EDU_ID = #{educationId}
	 	<if test="educationCategory != null">
	 			, EDU_CTGR = #{educationCategory}
	 	</if>
	 	<if test="educationTitle != null">
	 			, EDU_TTL = #{educationTitle}
	 	</if>
	 	<if test="memberId != null">
	 			, MBR_ID = #{memberId}
	 	</if>
	 	<if test="maxMember != null">
	 			, MAX_MBR = #{maxMember}
	 	</if>
	 	<if test="educationLocation != null">
	 			, EDU_LOC = #{educationLocation}
	 	</if>
	 	<if test="educationCurriculum != null">
	 			, EDU_CLCM = #{educationCurriculum}
	 	</if>
	 	<if test="educationIntroduce != null">
	 			, EDU_INTR = #{educationIntroduce}
	 	</if>
	 	<if test="startDate != null">
	 			, SRT_DATE = #{startDate}
	 	</if>
	 	<if test="endDate != null">
	 			, END_DATE = #{endDate}
	 	</if>
	 	<if test="startTime != null">
	 			, START_TM = #{startTime}
	 	</if>
	 	<if test="endTime != null">
	 			, END_TM = #{endTime}
	 	</if>
	 	<if test="educationType != null">
	 			, EDU_TP = #{educationType}
	 	</if>
	 	<if test="cost != null">
	 			, COST = #{cost}
	 	</if>
	 	WHERE	EDU_ID = #{educationId}
	</update>

	<select id="costCodeList" resultType="CostVO">
		SELECT	CD_ID cdId
				, CD_NM cdNm
		FROM	EDU_CST
	</select>
		<select id="typeCodeList"  resultType="EducationTypeVO">
		SELECT	CD_ID cdId
				, CD_NM cdNm
		FROM 	EDU_TIME
	</select>
	
	<select id="categoryCodeList" resultType="CategoryVO">
		SELECT	CD_ID cdId
				, CD_NM cdNm
				, M_CD_ID
		FROM	SML_CTGR
	</select>
		
	<select id="getAllEducationHistory" resultType="EduHistoryVO">
		SELECT	EDU_HTR_ID educationHistoryId
				, EDU_ID educationId
				, MBR_ID memberId
				, EDU_HTR_DT educationHistoryDate
				, STAT state
				, IP ip
				, CMNT cmnt
				, FDBK fdbk
		FROM	EDU_HTR
	</select>
	
	<select id="getJCEduHistoryHistory" resultType="EduHistoryVO">
  SELECT	EDU_HTR.EDU_HTR_ID educationHistoryId
				, EDU_INFO.EDU_TTL educationTitle
				, 	EDU_HTR.MBR_ID memberId
				, 	EDU_HTR.EDU_HTR_DT educationHistoryDate
				, 	EDU_HTR.STAT state
				, 	EDU_HTR.IP ip
				, 	EDU_HTR.CMNT cmnt
				, 	EDU_HTR.FDBK fdbk
		FROM	EDU_HTR
				, EDU_INFO
		WHERE	EDU_HTR.EDU_ID = EDU_INFO.EDU_ID
		AND		STAT = 'JOIN_CMPL'
	</select>
	
	<select id="getAllEduHistoryCount" resultType="_int">
		SELECT	COUNT(*)
		FROM	EDU_HTR
	</select>
	
	<select id="getJCEduHistoryCount" resultType="_int">
		SELECT	COUNT(*)
		FROM	EDU_HTR
		WHERE	STAT = 'JOIN_CMPL'
	</select>
	
	<update id="applyJoinEdcationByMemberId" parameterType="map">
		UPDATE	 EDU_HTR
		SET		 STAT = #{changeState}
		WHERE	 EDU_HTR_ID = #{educationHistoryId}
	</update>
	
	<update id="cancelJoinEducationByMemberId" parameterType="map">
		UPDATE	 EDU_HTR
		SET		 STAT = #{changeState}
		WHERE	 EDU_HTR_ID = #{educationHistoryId}
	</update>
<!-- 	
		<update id="completeCancelEducationByMemberId" parameterType="map">
		UPDATE	 EDU_HTR
		SET		 STAT = 'EDU_CL_C'
		WHERE	EDU_HTR_ID = #{educationHistoryId}
	</update>
	
		<delete id="denyCancelEducationByMemberId" parameterType="map">
		UPDATE	 EDU_HTR
		SET		 STAT = 'EDU_CL_R'
		WHERE	EDU_HTR_ID = #{educationHistoryId}
	</delete>
	
		<update id="completeGiveUpEducationByMemberId" parameterType="map">
		UPDATE	 EDU_HTR
		SET		 STAT = 'EDU_GU_C'
		WHERE	EDU_HTR_ID = #{educationHistoryId}
	</update>
	
		<delete id="denyGiveUpEducationByMemberId" parameterType="map">
		UPDATE	 EDU_HTR
		SET		 STAT = 'EDU_GU_R'
		WHERE	EDU_HTR_ID = #{educationHistoryId}
	</delete> -->
	
	<select id="getStateByEducationHistroyId" parameterType="String" resultType="String">
		SELECT  STAT
		FROM	EDU_HTR
		WHERE	EDU_HTR_ID = #{educationHistoryId}
	</select>
	
	
</mapper>
